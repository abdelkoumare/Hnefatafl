
buildscript {
    ext.kotlin_version = '0.12.1218'
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'me.tatarka:gradle-retrolambda:3.2.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:$kotlin_version"
    }
}

apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    defaultConfig {
        applicationId "net.varunramesh.hnefatafl"
        minSdkVersion 15
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"

        // Enable mulitdex
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main {
            assets.srcDir 'src/main/assets'
            jniLibs.srcDir 'src/main/libs'
        }

        instrumentTest.setRoot('tests')
        main.java.srcDirs += 'src/main/kotlin'
    }
}

repositories {
    jcenter()
    mavenCentral()
}

configurations { natives }

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:22.2.1'
    compile 'com.android.support:cardview-v7:22.2.1'
    compile 'com.android.support:palette-v7:21.0.0'
    compile 'org.pcollections:pcollections:2.1.2'
    compile 'com.github.navasmdc:MaterialDesign:1.5@aar'
    compile 'com.cocosw:bottomsheet:1.+@aar'
    compile ('com.github.florent37:materialviewpager:1.0.8@aar'){
        transitive = true
    }

    // LibGDX libraries
    compile "com.badlogicgames.gdx:gdx-backend-android:$gdxVersion"
    natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi"
    natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi-v7a"
    natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86"
    compile "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
    natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-armeabi"
    natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-armeabi-v7a"
    natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-x86"

    // Material Alert Dialog
    compile 'com.github.fengdai:alertdialogpro-theme-material:0.2.3'

    // Google Play Services
    compile "com.google.android.gms:play-services:6.5+"

    // Multidex
    compile 'com.android.support:multidex:1.0.0'

    compile "com.google.code.gson:gson:2.3.1"
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}

// called every time gradle gets executed, takes the native dependencies of
// the natives configuration, and extracts them to the proper libs/ folders
// so they get packed with the APK.
task copyAndroidNatives() {
    file("src/main/libs/armeabi/").mkdirs();
    file("src/main/libs/armeabi-v7a/").mkdirs();
    file("src/main/libs/x86/").mkdirs();

    configurations.natives.files.each { jar ->
        def outputDir = null
        if(jar.name.endsWith("natives-armeabi-v7a.jar")) outputDir = file("src/main/libs/armeabi-v7a")
        if(jar.name.endsWith("natives-armeabi.jar")) outputDir = file("src/main/libs/armeabi")
        if(jar.name.endsWith("natives-x86.jar")) outputDir = file("src/main/libs/x86")
        if(outputDir != null) {
            copy {
                from zipTree(jar)
                into outputDir
                include "*.so"
            }
        }
    }
}
